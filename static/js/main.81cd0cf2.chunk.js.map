{"version":3,"sources":["hooks/useNetwork.tsx","utils/routes.tsx","hooks/useAuth.tsx","utils/api-resourses/nutrition.ts","hooks/useIngredients.tsx","utils/burger-api.tsx","components/NavBar/NavBar.tsx","utils/api-resourses/firebase-burger.ts","components/BurgerIngredient/BurgerIngredient.tsx","components/Burger/Burger.tsx","components/Modal/Modal.tsx","components/BuildControls/BuildControl/BuildControl.tsx","components/BuildControls/BuildControls.tsx","components/CustomButton/CustomButton.tsx","components/CustomInput/CustomInput.tsx","screens/BurgerBuilder/burger-builder-validation.tsx","screens/BurgerBuilder/BurgerBuilder.tsx","utils/firebase.ts","components/BurgerDetailsTable/BurgerDetailsTable.tsx","screens/Catalog/Catalog.tsx","screens/OnBoarding/OnBoarding.tsx","MainApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["networkContext","createContext","isOnline","ProvideNetwork","children","auth","useState","navigator","onLine","setIsOnline","useEffect","window","addEventListener","useProvideNetwork","Provider","value","useNetwork","useContext","routes","home","catalog","authContext","user","name","email","token","signOut","signIn","Promise","resolve","ProvideAuth","forceRerender","setToken","setUser","history","a","auth2","gapi","getAuthInstance","googleUser","profile","getBasicProfile","profileData","getGivenName","getEmail","idToken","getAuthResponse","id_token","localStorage","setItem","JSON","stringify","push","console","error","_onInit","storedToken","getItem","storedUser","parse","localAuthRefresh","_onError","err","log","load","init","process","then","myFunc","clear","useProvideAuth","useAuth","nutritionAPI","axios","create","baseURL","timeout","headers","interceptors","request","use","config","params","appId","appKey","ingredientsIDs","salad","meat","cheese","bacon","ingredientsContext","ingredients","ProvideIngredients","setIngredients","storedIngredients","parsedData","all","Object","keys","map","key","id","get","data","calories","nf_calories","sodium","nf_sodium","vitaminA","nf_vitamin_a_dv","vitaminC","nf_vitamin_c_dv","detailedInfo","res","localIngredientsRefresh","useProvideIngredients","useStyles","makeStyles","theme","grow","flexGrow","appBar","background","title","display","breakpoints","up","sectionDesktop","sectionMobile","withRouter","classes","AccessBlock","Button","color","onClick","className","AppBar","position","Toolbar","Typography","variant","noWrap","burgerAPI","Cheese","width","height","margin","borderRadius","Meat","Salad","Bacon","BreadBottom","styled","div","BreadTop","Seeds1","Seeds2","BurgerIngredient","ingredient","type","style","BurgerContainer","Burger","isEditing","transformedIngredients","igKey","Array","_","i","reduce","arr","el","concat","length","fontSize","fontWeight","marginBottom","CustomModal","isOpen","label","contentLabel","ariaHideApp","ControlContainer","button","buttonType","Label","BuildControl","addIngredient","removeIngredient","data-testid","controls","ControlsContainer","BuildControls","CustomButton","isDisabled","testId","disabled","backgroundColor","CustomInput","onChange","TextField","yup","shape","required","BurgerBuilder","addBurger","updateBurger","ingredientsSet","burgerName","updatedCount","updatedingredients","saveNewBurger","burger","newBurger","post","changeBurger","put","editBurger","oldCount","updatedIngredients","isSubmitButtonDisabled","errors","some","initialValues","validationSchema","burgerBuilderValidationSchema","onSubmit","newName","handleChange","touched","values","StyledTableCell","withStyles","head","palette","common","black","white","body","TableCell","StyledTableRow","root","default","TableRow","table","roundValue","Math","round","BurgerDetailsTable","ingredientsCounts","calculatedIngredients","result","currentKey","ingredientCount","find","parseInt","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","BurgerWrapper","Catalog","isModalOpen","setIsModalOpen","React","burgers","setBurgers","selectedBurger","setSelectedBurger","interval","setInterval","resData","mappedData","filter","catch","clearInterval","storedBurgers","removeBurger","delete","deleteBurger","filteredBurgers","updatedBurger","slicedBurgers","Grid","container","item","xs","sm","flexDirection","marginTop","bottom","right","OfflineHeader","MainApp","exact","path","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","Modal","setAppElement","ReactDOM","render","document","getElementById","URL","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.81cd0cf2.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nexport type NetworkProps = {\n  isOnline: boolean;\n};\n\nconst networkContext = createContext<NetworkProps>({\n  isOnline: true,\n});\n\nexport function ProvideNetwork({\n  children,\n}: {\n  children: React.ReactChild;\n}): React.ReactElement {\n  const auth = useProvideNetwork();\n  return (\n    <networkContext.Provider value={auth}>{children}</networkContext.Provider>\n  );\n}\n\nexport const useNetwork = (): NetworkProps => useContext(networkContext);\n\nfunction useProvideNetwork(): NetworkProps {\n  const [isOnline, setIsOnline] = useState<boolean>(navigator.onLine);\n\n  useEffect(() => {\n    window.addEventListener('online', () => setIsOnline(true));\n    window.addEventListener('offline', () => setIsOnline(false));\n  }, []);\n\n  return {\n    isOnline,\n  };\n}\n","const routes = {\n  home: '/',\n  catalog: '/catalog',\n};\n\nexport default routes;\n","import React, { useState, useContext, createContext, useEffect } from 'react';\nimport { History } from 'history';\nimport { useNetwork } from './useNetwork';\nimport routes from '../utils/routes';\n\ninterface ProvideAuthProps {\n  children: React.ReactChild;\n}\n\nexport interface AuthError {\n  error: string;\n  details: string;\n}\n\nexport interface User {\n  name: string;\n  email: string;\n}\n\nexport interface UseAuthProps {\n  user: User;\n  token: string;\n  signIn: (e: History) => Promise<void>;\n  signOut: (e: History) => void;\n}\n\nconst authContext = createContext<UseAuthProps>({\n  user: { name: '', email: '' },\n  token: '',\n  signOut: () => '',\n  signIn: () => Promise.resolve(),\n});\n\nconst clientId = 'client_id';\n\n// Provider component that wraps your app and makes auth object available\n// to any child component that calls useAuth().\nexport function ProvideAuth({\n  children,\n}: ProvideAuthProps): React.ReactElement {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = (): UseAuthProps => useContext(authContext);\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth(): UseAuthProps {\n  const [, forceRerender] = useState();\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({ name: '', email: '' });\n  const { isOnline } = useNetwork();\n\n  const signIn = async (history: History): Promise<void> => {\n    try {\n      const auth2 = window.gapi.auth2.getAuthInstance();\n      const googleUser = await auth2.signIn();\n      const profile = googleUser.getBasicProfile();\n      const profileData = {\n        name: profile.getGivenName(),\n        email: profile.getEmail(),\n      };\n      const idToken = googleUser.getAuthResponse().id_token;\n      localStorage.setItem('token', idToken);\n      localStorage.setItem('user', JSON.stringify(profileData));\n      setToken(idToken);\n      setUser(profileData);\n      history.push(routes.catalog);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const signOut = (history: History): void => {\n    localStorage.clear();\n    setToken('');\n    setUser({ name: '', email: '' });\n    history.push(routes.home);\n  };\n\n  const localAuthRefresh = (): void => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      setToken('');\n    }\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  };\n\n  // Set token and user on mount\n  useEffect(() => {\n    const _onInit = (): void => {\n      localAuthRefresh();\n    };\n    const _onError = (err: AuthError): void => {\n      console.log('error', err);\n    };\n    const { gapi } = window;\n    if (gapi) {\n      gapi.load('auth2', function() {\n        gapi.auth2\n          .init({ [clientId]: process.env.REACT_APP_GOOGLE_CLIENT_ID })\n          .then(_onInit, _onError);\n      });\n    } else {\n      // eslint-disable-next-line\n      // @ts-ignore\n      window.myFunc = forceRerender;\n    }\n\n    // we include the empty array which means this only runs once on component mount\n    // since we are simply getting an item from AsyncStorage that is sufficient for now\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOnline, window.gapi]);\n\n  // Return the token, user object, and auth methods\n  return {\n    token,\n    user,\n    signIn,\n    signOut,\n  };\n}\n","import axios, { AxiosRequestConfig } from 'axios';\n\nconst nutritionAPI = axios.create({\n  baseURL: 'https://api.nutritionix.com/v1_1/',\n  timeout: 1000,\n  headers: { 'Content-type': 'application/json' },\n});\n\nnutritionAPI.interceptors.request.use(\n  (config: AxiosRequestConfig): AxiosRequestConfig => {\n    config.params = config.params || {};\n    config.params.appId = process.env.REACT_APP_NUTRITION_ID;\n    config.params.appKey = process.env.REACT_APP_NUTRITION_KEY;\n    return config;\n  },\n);\n\nexport default nutritionAPI;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { getIngredientById } from '../utils/burger-api';\nimport { useNetwork } from './useNetwork';\n\nexport interface IngredientsProps {\n  [key: string]: string;\n}\n\nexport interface IngredientDetailsProps {\n  [key: string]: number;\n}\n\nexport interface IngredientProps {\n  key: string;\n  detailedInfo: IngredientDetailsProps;\n}\n\nexport interface UseIngredientsProps {\n  ingredients: Array<IngredientProps>;\n}\n\nconst ingredientsIDs: IngredientsProps = {\n  salad: '5da6c2339094e13219339f14',\n  meat: '561e795169fc03824d08345e',\n  cheese: '5976643fa690431a53463b05',\n  bacon: '561e6c16c265794042cb5f20',\n};\n\nconst ingredientsContext = createContext<UseIngredientsProps>({\n  ingredients: [],\n});\n\nexport function ProvideIngredients({\n  children,\n}: {\n  children: React.ReactChild;\n}): React.ReactElement {\n  const auth = useProvideIngredients();\n  return (\n    <ingredientsContext.Provider value={auth}>\n      {children}\n    </ingredientsContext.Provider>\n  );\n}\n\nexport const useIngredients = (): UseIngredientsProps =>\n  useContext(ingredientsContext);\n\nfunction useProvideIngredients(): UseIngredientsProps {\n  const [ingredients, setIngredients] = useState<Array<IngredientProps>>([]);\n  const { isOnline } = useNetwork();\n\n  const localIngredientsRefresh = (): void => {\n    const storedIngredients = localStorage.getItem('ingredients');\n    if (storedIngredients) {\n      const parsedData = JSON.parse(storedIngredients);\n      setIngredients(parsedData);\n    } else {\n      Promise.all(\n        Object.keys(ingredientsIDs).map(async (key: string) => {\n          const { data } = await getIngredientById(ingredientsIDs[key]);\n          const {\n            nf_calories: calories,\n            nf_sodium: sodium,\n            nf_vitamin_a_dv: vitaminA,\n            nf_vitamin_c_dv: vitaminC,\n          } = data;\n          const detailedInfo = {\n            calories,\n            sodium,\n            vitaminA,\n            vitaminC,\n          };\n\n          return { key, detailedInfo };\n        }),\n      ).then(res => {\n        localStorage.setItem('ingredients', JSON.stringify(res));\n        setIngredients(res);\n      });\n    }\n  };\n\n  useEffect(() => {\n    localIngredientsRefresh();\n  }, [isOnline]);\n\n  return {\n    ingredients,\n  };\n}\n","import nutritionAPI from './api-resourses/nutrition';\nimport { AxiosResponse } from 'axios';\n\nconst getIngredientById = (id: string): Promise<AxiosResponse> => {\n  return nutritionAPI.get('item', {\n    params: { id },\n  });\n};\n\nexport { getIngredientById };\n","import React from 'react';\nimport { AppBar, Button, makeStyles, Toolbar } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from '../../hooks/useAuth';\nimport { withRouter } from 'react-router';\nimport { History } from 'history';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: 'rgb(255,141,85)',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\ninterface NavBarProps {\n  history: History;\n}\n\nconst NavBar = ({ history }: NavBarProps): React.ReactElement => {\n  const classes = useStyles();\n  const { signIn, signOut, user } = useAuth();\n\n  const AccessBlock =\n    user.name === '' ? (\n      <Button color=\"inherit\" onClick={(): Promise<void> => signIn(history)}>\n        Login\n      </Button>\n    ) : (\n      <Button color=\"inherit\" onClick={(): void => signOut(history)}>\n        Logout\n      </Button>\n    );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Burger-App\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>{AccessBlock}</div>\n          <div className={classes.sectionMobile}>{AccessBlock}</div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withRouter(NavBar);\n","import axios from 'axios';\n\nconst burgerAPI = axios.create({\n  baseURL: 'https://burger-app-eaa1f.firebaseio.com/',\n});\n\nexport default burgerAPI;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ninterface BurgerIngredientProps {\n  type: string;\n}\n\nconst BurgerIngredient = ({\n  type,\n}: BurgerIngredientProps): React.ReactElement | null => {\n  let ingredient = null;\n\n  switch (type) {\n    case 'bread-bottom':\n      ingredient = <BreadBottom />;\n      break;\n    case 'bread-top':\n      ingredient = (\n        <BreadTop>\n          <Seeds1 />\n          <Seeds2 />\n        </BreadTop>\n      );\n      break;\n    case 'meat':\n      ingredient = <div style={Meat} />;\n      break;\n    case 'cheese':\n      ingredient = <div style={Cheese} />;\n      break;\n    case 'salad':\n      ingredient = <div style={Salad} />;\n      break;\n    case 'bacon':\n      ingredient = <div style={Bacon} />;\n      break;\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n};\n\nconst Cheese = {\n  width: '90%',\n  height: '4.5%',\n  margin: '2% auto',\n  background: 'linear-gradient(#f4d004, #d6bb22)',\n  borderRadius: '20px',\n};\n\nconst Meat = {\n  width: '80%',\n  height: '8%',\n  background: 'linear-gradient(#7f3608, #702e05)',\n  margin: '2% auto',\n  borderRadius: '15px',\n};\n\nconst Salad = {\n  width: '85%',\n  height: '7%',\n  margin: '2% auto',\n  background: 'linear-gradient(#228c1d, #91ce50)',\n  borderRadius: '20px',\n};\n\nconst Bacon = {\n  width: '80%',\n  height: '3%',\n  background: 'linear-gradient(#bf3813, #c45e38)',\n  margin: '2% auto',\n};\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nconst BreadBottom = styled.div`\n  height: 13%;\n  width: 80%;\n  background: #f08e4a;\n  border-radius: 0 0 30px 30px;\n  box-shadow: inset -15px 0 #c15711;\n  margin: 2% auto;\n`;\n\nconst BreadTop = styled.div`\n  height: 20%;\n  width: 80%;\n  background: linear-gradient(#bc581e, #e27b36);\n  border-radius: 50% 50% 0 0;\n  box-shadow: inset -15px 0 #c15711;\n  margin: 2% auto;\n  position: relative;\n`;\n\nconst Seeds1 = styled.div`\n  width: 10%;\n  height: 15%;\n  position: absolute;\n  background-color: white;\n  left: 30%;\n  top: 50%;\n  border-radius: 40%;\n  transform: rotate(-20deg);\n  box-shadow: inset -2px -3px #c9c9c9;\n\n  :before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: 180%;\n    top: -50%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px -3px #c9c9c9;\n  }\n\n  :after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: -170%;\n    top: -260%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px 2px #c9c9c9;\n  }\n`;\n\nconst Seeds2 = styled.div`\n  width: 10%;\n  height: 15%;\n  position: absolute;\n  background-color: white;\n  left: 64%;\n  top: 50%;\n  border-radius: 40%;\n  transform: rotate(10deg);\n  box-shadow: inset -3px 0 #c9c9c9;\n\n  &::before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: 150%;\n    top: -130%;\n    border-radius: 40%;\n    transform: rotate(90deg);\n    box-shadow: inset 1px 3px #c9c9c9;\n  }\n\n  &::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: -170%;\n    top: -260%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px 2px #c9c9c9;\n  }\n`;\n\nexport default BurgerIngredient;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\n\nexport interface BurgerIngredients {\n  [key: string]: number;\n}\n\nexport interface BurgerProps {\n  ingredients: BurgerIngredients;\n  name?: string;\n  isEditing?: boolean;\n}\n\nconst Burger: FunctionComponent<BurgerProps> = ({\n  ingredients,\n  name,\n  isEditing = false,\n}) => {\n  console.log(isEditing);\n  const transformedIngredients = Object.keys(ingredients)\n    .map((igKey: string) => {\n      return [...Array(ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients.push(<p>please start adding ingredients</p>);\n  }\n  return (\n    <BurgerContainer>\n      {!isEditing && (\n        <div\n          style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '10px' }}\n        >\n          {name}\n        </div>\n      )}\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </BurgerContainer>\n  );\n};\n\nconst BurgerContainer = styled.div`\n  width: 100%;\n  margin: auto;\n  height: 100%;\n  text-align: center;\n  font-weight: bold;\n  fontsize: 1.2rem;\n`;\n\nexport default Burger;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport Modal from 'react-modal';\n\ninterface ModalProps {\n  children: ReactNode;\n  isOpen: boolean;\n  label: string;\n}\n\nconst CustomModal: FunctionComponent<ModalProps> = ({\n  children,\n  isOpen,\n  label,\n}) => (\n  <Modal isOpen={isOpen} contentLabel={label} ariaHideApp={true}>\n    {children}\n  </Modal>\n);\n\nexport default CustomModal;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\ninterface BuildControlProps {\n  label: string;\n  addIngredient: () => void;\n  removeIngredient: () => void;\n}\n\nconst BuildControl: FunctionComponent<BuildControlProps> = ({\n  label,\n  addIngredient,\n  removeIngredient,\n}) => {\n  return (\n    <ControlContainer>\n      <Label>{label}</Label>\n      <Button\n        type=\"button\"\n        buttonType=\"less\"\n        data-testid={`${label}-less`}\n        onClick={(): void => removeIngredient()}\n      >\n        less\n      </Button>\n      <Button\n        type=\"button\"\n        buttonType=\"more\"\n        data-testid={`${label}-more`}\n        onClick={(): void => addIngredient()}\n      >\n        more\n      </Button>\n    </ControlContainer>\n  );\n};\n\nconst ControlContainer = styled.div`\n  background-color: #cf8f2e;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 5px 0;\n`;\n\nconst Button = styled.button`\n  display: block,\n  font: inherit;\n  padding: 5px;\n  margin: 0 5px;\n  width: 80px;\n  border: 1px solid #AA6817;\n  cursor: pointer;\n  outline: none;\n  \n  &::disabled {\n  background-color: #AC9980;\n  border: 1px solid #7E7365;\n  color: #ccc;\n  cursor: default;\n  }\n  \n  &::hover:disabled {\n  background-color: #AC9980;\n  color: #ccc;\n  cursor: not-allowed;\n  }\n  \n  ${({ buttonType }: { buttonType: string }): string =>\n    buttonType === 'less'\n      ? `\n  background-color: #D39952;\n  color: white;\n  :hover, :active {\n  background-color: #DAA972;\n  color: white;\n  }\n  `\n      : `\n  background-color: #8F5E1E;\n  color: white;\n  :hover, :active {\n  background-color: #99703F;\n  color: white;\n  }\n  `}\n  \n`;\n\nconst Label = styled.div`\n  padding: 10px;\n  font-weight: bold;\n  width: 80px;\n`;\nexport default BuildControl;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' },\n];\n\ninterface BuildControlsProps {\n  addIngredient: Function;\n  removeIngredient: Function;\n}\n\nconst BuildControls: FunctionComponent<BuildControlsProps> = ({\n  addIngredient,\n  removeIngredient,\n}) => {\n  return (\n    <ControlsContainer>\n      {controls.map(({ type, label }) => (\n        <BuildControl\n          key={label}\n          label={label}\n          addIngredient={(): void => addIngredient(type)}\n          removeIngredient={(): void => removeIngredient(type)}\n        />\n      ))}\n    </ControlsContainer>\n  );\n};\n\nconst ControlsContainer = styled.div`\n  width: 100%;\n  background-color: #cf8f2e;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  box-shadow: 0 2px 1px #ccc;\n  margin: auto;\n  padding: 10px;\n`;\n\nexport default BuildControls;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\ninterface ModalProps {\n  children: ReactNode;\n  isDisabled: boolean;\n  onClick?: () => void;\n  testId: string;\n  style?: object;\n  type?: 'button' | 'submit';\n}\n\nconst CustomButton: FunctionComponent<ModalProps> = ({\n  children,\n  isDisabled,\n  onClick,\n  testId,\n  type,\n  style,\n}) => (\n  <Button\n    type={type}\n    data-testid={testId}\n    disabled={isDisabled}\n    onClick={onClick}\n    style={{ ...style, backgroundColor: '#F08E49' }}\n  >\n    {children}\n  </Button>\n);\n\nexport default CustomButton;\n","import React, { FunctionComponent } from 'react';\nimport { TextField } from '@material-ui/core';\n\ninterface ModalProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label: string;\n}\n\nconst CustomInput: FunctionComponent<ModalProps> = ({\n  value,\n  onChange,\n  label,\n}) => (\n  // eslint-disable-next-line\n  // @ts-ignore\n  <TextField\n    style={{ width: '100%' }}\n    value={value}\n    onChange={onChange}\n    id=\"outlined-basic\"\n    data-testid={'burger-input'}\n    label={label}\n    variant=\"outlined\"\n  />\n);\n\nexport default CustomInput;\n","import * as yup from 'yup';\n\nexport default yup.object().shape({\n  name: yup.string().required(),\n});\n","import React, { FunctionComponent, ReactNode, useState } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport CustomInput from '../../components/CustomInput/CustomInput';\nimport { editBurger, saveBurger } from '../../utils/firebase';\nimport { BurgerProps } from '../Catalog/Catalog';\nimport { Form, Formik } from 'formik';\nimport burgerBuilderValidationSchema from './burger-builder-validation';\n\ntype BurgerBuilderProps = {\n  addBurger: (burger: BurgerProps) => void;\n  updateBurger: (burger: BurgerProps) => void;\n  ingredientsSet?: IngredientProps;\n  burgerName?: string;\n  id?: string;\n};\n\nexport type IngredientProps = {\n  [key: string]: number;\n};\n\nconst BurgerBuilder: FunctionComponent<BurgerBuilderProps> = ({\n  addBurger,\n  updateBurger,\n  ingredientsSet,\n  burgerName,\n  id,\n}) => {\n  const [isEditing] = useState(burgerName !== '');\n  const [name] = useState(burgerName || '');\n  const [ingredients, setIngredients] = useState<IngredientProps>(\n    ingredientsSet || {\n      salad: 0,\n      meat: 0,\n      cheese: 0,\n      bacon: 0,\n    },\n  );\n\n  const addIngredient = (type: string): void => {\n    const oldCount = ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedingredients = {\n      ...ingredients,\n    };\n    updatedingredients[type] = updatedCount;\n    setIngredients(updatedingredients);\n  };\n\n  const saveNewBurger = (name: string): void => {\n    const newBurger = {\n      ingredients: ingredients,\n      name: name,\n    };\n    saveBurger(newBurger).then(({ data }) => {\n      const { name } = data;\n      addBurger({ ...newBurger, id: name });\n    });\n  };\n\n  const changeBurger = (name: string): void => {\n    const newBurger = {\n      ingredients: ingredients,\n      name: name,\n    };\n    editBurger(id, newBurger).then(() => {\n      updateBurger(newBurger);\n    });\n  };\n\n  const removeIngredient = (type: string): void => {\n    const oldCount = ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    setIngredients(updatedIngredients);\n  };\n\n  const isSubmitButtonDisabled = (errors: object): boolean =>\n    Object.keys(errors).length > 0 ||\n    !Object.keys(ingredients).some(key => ingredients[key] > 0);\n\n  return (\n    <div style={{ height: '400px' }}>\n      <Formik\n        initialValues={{ name: name }}\n        validationSchema={burgerBuilderValidationSchema}\n        onSubmit={({ name: newName }): void =>\n          isEditing && name !== ''\n            ? changeBurger(newName)\n            : saveNewBurger(newName)\n        }\n      >\n        {({ errors, handleChange, touched, values }): ReactNode => {\n          return (\n            <Form style={{ height: '100%' }}>\n              <div style={{ margin: '50px 0' }}>\n                <CustomInput\n                  value={values.name}\n                  onChange={handleChange('name')}\n                  label=\"Burger Name\"\n                />\n                {errors.name && touched.name ? (\n                  <div style={{ color: 'red' }}>{errors.name}</div>\n                ) : null}\n              </div>\n              <Burger\n                ingredients={ingredients}\n                name={name}\n                isEditing={isEditing}\n              />\n              <BuildControls\n                addIngredient={addIngredient}\n                removeIngredient={removeIngredient}\n              />\n              {!id ? (\n                <CustomButton\n                  type=\"submit\"\n                  testId=\"saveBurger\"\n                  isDisabled={isSubmitButtonDisabled(errors)}\n                >\n                  save\n                </CustomButton>\n              ) : (\n                <CustomButton\n                  type=\"submit\"\n                  testId=\"editBurger\"\n                  isDisabled={isSubmitButtonDisabled(errors)}\n                >\n                  edit\n                </CustomButton>\n              )}\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BurgerBuilder;\n","import { AxiosResponse } from 'axios';\nimport burgerAPI from './api-resourses/firebase-burger';\nimport { BurgerProps } from '../screens/Catalog/Catalog';\n\nconst getBurgers = (): Promise<AxiosResponse> => burgerAPI.get('orders.json');\n\nconst saveBurger = (burger: BurgerProps): Promise<AxiosResponse> =>\n  burgerAPI.post('/orders.json', burger);\n\nconst editBurger = (\n  id: string | undefined,\n  burger: BurgerProps,\n): Promise<AxiosResponse> => burgerAPI.put(`/orders/${id}.json/`, burger);\n\nconst deleteBurger = (id: string | undefined): Promise<AxiosResponse> =>\n  burgerAPI.delete(`orders/${id}.json`);\n\nexport { getBurgers, saveBurger, editBurger, deleteBurger };\n","import React, { FC } from 'react';\nimport { TableContainer } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { useIngredients } from '../../hooks/useIngredients';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {},\n});\n\nconst roundValue = (value: number): number => Math.round(value);\n\nconst BurgerDetailsTable: FC<any> = ({ ingredients: ingredientsCounts }) => {\n  const classes = useStyles();\n  const { ingredients } = useIngredients();\n\n  const calculatedIngredients = Object.keys(ingredientsCounts).reduce(\n    (result, currentKey) => {\n      const ingredientCount = ingredientsCounts[currentKey];\n      const ingredient = ingredients.find(\n        (ingredient: any) => ingredient.key === currentKey,\n      );\n      const {\n        vitaminA = 0,\n        vitaminC = 0,\n        sodium = 0,\n        calories = 0,\n      } = ingredient ? ingredient.detailedInfo : {};\n      return {\n        vitaminA: roundValue(\n          result.vitaminA + vitaminA * parseInt(ingredientCount),\n        ),\n        vitaminC: roundValue(\n          result.vitaminC + vitaminC * parseInt(ingredientCount),\n        ),\n        sodium: roundValue(result.sodium + sodium * parseInt(ingredientCount)),\n        calories: roundValue(\n          result.calories + calories * parseInt(ingredientCount),\n        ),\n      };\n    },\n    // initial value\n    { vitaminA: 0, vitaminC: 0, sodium: 0, calories: 0 },\n  );\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"right\">Vitamin A</StyledTableCell>\n              <StyledTableCell align=\"right\">Vitamin C</StyledTableCell>\n              <StyledTableCell align=\"right\">Sodium</StyledTableCell>\n              <StyledTableCell align=\"right\">Calories</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.vitaminA}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.vitaminC}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.sodium}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.calories}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default BurgerDetailsTable;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport { deleteBurger, getBurgers } from '../../utils/firebase';\nimport Burger from '../../components/Burger/Burger';\nimport CustomModal from '../../components/Modal/Modal';\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport BurgerDetailsTable from '../../components/BurgerDetailsTable/BurgerDetailsTable';\nimport { Grid } from '@material-ui/core';\nimport { useNetwork } from '../../hooks';\n\nexport interface BurgerIngredients {\n  [key: string]: number;\n}\n\nexport interface BurgerProps {\n  ingredients: BurgerIngredients;\n  name?: string;\n  id?: string;\n}\n\nconst Catalog = (): React.ReactElement => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const { isOnline } = useNetwork();\n  const [burgers, setBurgers] = React.useState<Array<BurgerProps>>([]);\n  const [\n    selectedBurger,\n    setSelectedBurger,\n  ] = React.useState<BurgerProps | null>(null);\n  useEffect((): (() => void) => {\n    const interval = setInterval(\n      () => {\n        getBurgers()\n          .then(({ data = {} }) => {\n            const resData = data || {};\n\n            const mappedData = Object.keys(resData)\n              .filter(key => !burgers.some(burger => burger.id === key))\n              .map(key => ({\n                ...data[key],\n                id: key,\n              }));\n            setBurgers(burgers.concat(mappedData));\n          })\n          .catch(err => console.log(err));\n      },\n      burgers.length === 0 ? 1000 : 5000,\n    );\n\n    return (): void => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOnline, burgers]);\n\n  useEffect(() => {\n    // set burgers into local storage when we got offline\n    if (!isOnline) {\n      const storedBurgers = localStorage.getItem('burgers') || '[]';\n      localStorage.setItem('burgers', JSON.stringify(burgers));\n      setBurgers(JSON.parse(storedBurgers));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOnline]);\n\n  const addNewBurger = (burger: BurgerProps): void => {\n    setBurgers([...burgers, burger]);\n    setIsModalOpen(false);\n    setSelectedBurger(null);\n  };\n\n  const removeBurger = (id: string | undefined): void => {\n    deleteBurger(id).then(() => {\n      const filteredBurgers = burgers.filter(burger => burger.id !== id);\n      setBurgers(filteredBurgers);\n    });\n  };\n\n  const updateBurger = (updatedBurger: BurgerProps): void => {\n    const slicedBurgers = burgers.filter(\n      burger => burger.id !== selectedBurger?.id,\n    );\n    setBurgers([\n      ...slicedBurgers,\n      { ...updatedBurger, id: selectedBurger?.id },\n    ]);\n    setSelectedBurger(null);\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <CustomModal isOpen={isModalOpen} label=\"Burger Builder\">\n        <div>\n          <div\n            onClick={(): void => {\n              setIsModalOpen(false);\n              setSelectedBurger(null);\n            }}\n          >\n            close\n          </div>\n          <BurgerBuilder\n            addBurger={addNewBurger}\n            updateBurger={updateBurger}\n            ingredientsSet={selectedBurger?.ingredients}\n            burgerName={selectedBurger?.name}\n            id={selectedBurger?.id}\n          />\n        </div>\n      </CustomModal>\n\n      {burgers.map((burger: BurgerProps) => {\n        const { ingredients, name, id } = burger;\n        return (\n          <Grid container>\n            <Grid item xs={12} sm={6}>\n              <BurgerWrapper>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    height: '100%',\n                  }}\n                >\n                  <Burger\n                    ingredients={ingredients}\n                    name={name}\n                    data-testid={name}\n                  />\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\n                    <CustomButton\n                      style={{ marginBottom: '10px' }}\n                      testId={`${name}-update`}\n                      isDisabled={false}\n                      onClick={(): void => {\n                        setSelectedBurger(burger);\n                        setIsModalOpen(true);\n                      }}\n                    >\n                      Edit\n                    </CustomButton>\n                    <CustomButton\n                      testId={`${name}-delete`}\n                      isDisabled={false}\n                      onClick={(): void => {\n                        removeBurger(id);\n                      }}\n                    >\n                      remove\n                    </CustomButton>\n                  </div>\n                </div>\n              </BurgerWrapper>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <div style={{ marginTop: '10px' }}>\n                <BurgerDetailsTable ingredients={ingredients} />\n              </div>\n            </Grid>\n          </Grid>\n        );\n      })}\n\n      <div style={{ position: 'fixed', bottom: '5%', right: '10%' }}>\n        <CustomButton\n          testId={'openBuilder'}\n          onClick={(): void => setIsModalOpen(true)}\n          isDisabled={false}\n        >\n          open builder\n        </CustomButton>\n      </div>\n    </>\n  );\n};\n\nconst BurgerWrapper = styled.div`\n  -webkit-box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  margin: 10px;\n\n  height: 300px;\n  text-align: center;\n  font-weight: bold;\n  fontsize: 1.2rem;\n  max-width: 450px;\n`;\n\nexport default Catalog;\n","import React, { FC } from 'react';\nimport { useAuth } from '../../hooks';\nimport { withRouter } from 'react-router';\nimport { History } from 'history';\nimport routes from '../../utils/routes';\n\ninterface NavBarProps {\n  history: History;\n}\n\nconst OnBoarding: FC<NavBarProps> = ({ history }) => {\n  const { token } = useAuth();\n  console.log(token);\n\n  if (token !== '') {\n    history.push(routes.catalog);\n  }\n\n  return <div>asdfasdfasdf</div>;\n};\n\nexport default withRouter(OnBoarding);\n","import React, { FC } from 'react';\nimport {HashRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport Catalog from './screens/Catalog/Catalog';\nimport { useNetwork } from './hooks';\nimport styled from 'styled-components';\nimport OnBoarding from './screens/OnBoarding/OnBoarding';\nimport routes from './utils/routes';\n\nconst MainApp: FC = () => {\n  const { isOnline } = useNetwork();\n\n  return (\n    <>\n      <HashRouter>\n        <div>\n          <NavBar />\n        </div>\n        <Switch>\n          <Route exact path={routes.home}>\n            <OnBoarding />\n          </Route>\n          <Route path={routes.catalog}>\n            <Catalog />\n          </Route>\n        </Switch>\n      </HashRouter>\n      {!isOnline && <OfflineHeader>you are offline</OfflineHeader>}\n    </>\n  );\n};\n\nconst OfflineHeader = styled.div`\n  width: 100%;\n  background-color: yellow;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  bottom: 0%;\n  z-index: 1;\n`;\n\nexport default MainApp;\n","import React from 'react';\nimport './App.css';\nimport { ProvideAuth } from './hooks/useAuth';\nimport { ProvideIngredients } from './hooks/useIngredients';\nimport { ProvideNetwork } from './hooks/useNetwork';\nimport MainApp from './MainApp';\nconst App = (): React.ReactElement => {\n  return (\n    <div>\n      <ProvideNetwork>\n        <ProvideAuth>\n          <ProvideIngredients>\n            <MainApp />\n          </ProvideIngredients>\n        </ProvideAuth>\n      </ProvideNetwork>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Modal from 'react-modal';\nimport * as serviceWorker from './serviceWorker';\nModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}