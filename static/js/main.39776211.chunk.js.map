{"version":3,"sources":["hooks/useNetwork.tsx","utils/routes.tsx","hooks/useAuth.tsx","utils/api-resourses/nutrition.ts","hooks/useIngredients.tsx","utils/burger-api.tsx","components/NavBar/NavBar.tsx","utils/api-resourses/firebase-burger.ts","components/BurgerIngredient/BurgerIngredient.tsx","components/Burger/Burger.tsx","components/Modal/Modal.tsx","components/BuildControls/BuildControl/BuildControl.tsx","components/BuildControls/BuildControls.tsx","components/CustomButton/CustomButton.tsx","components/CustomInput/CustomInput.tsx","screens/BurgerBuilder/BurgerBuilder.tsx","utils/firebase.ts","components/BurgerDetailsTable/BurgerDetailsTable.tsx","screens/Catalog/Catalog.tsx","screens/OnBoarding/OnBoarding.tsx","MainApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["networkContext","createContext","isOnline","ProvideNetwork","children","auth","useState","setIsOnline","useEffect","window","addEventListener","useProvideNetwork","Provider","value","useNetwork","useContext","routes","home","catalog","authContext","user","name","email","token","signOut","console","log","signIn","Promise","resolve","ProvideAuth","forceRerender","setToken","setUser","history","a","auth2","gapi","getAuthInstance","googleUser","profile","getBasicProfile","profileData","getGivenName","getEmail","idToken","getAuthResponse","id_token","localStorage","setItem","JSON","stringify","push","_onInit","storedToken","getItem","storedUser","parse","localAuthRefresh","_onError","err","load","init","process","then","myFunc","clear","useProvideAuth","useAuth","nutritionAPI","axios","create","baseURL","timeout","headers","interceptors","request","use","config","params","appId","appKey","ingredientsIDs","salad","meat","cheese","bacon","ingredientsContext","ingredients","ProvideIngredients","setIngredients","storedIngredients","parsedData","all","Object","keys","map","key","id","get","data","calories","nf_calories","sodium","nf_sodium","vitaminA","nf_vitamin_a_dv","vitaminC","nf_vitamin_c_dv","detailedInfo","res","localIngredientsRefresh","useProvideIngredients","useStyles","makeStyles","theme","grow","flexGrow","appBar","background","title","display","breakpoints","up","sectionDesktop","sectionMobile","withRouter","classes","AccessBlock","Button","color","onClick","className","AppBar","position","Toolbar","Typography","variant","noWrap","burgerAPI","Cheese","width","height","margin","borderRadius","Meat","Salad","Bacon","BreadBottom","styled","div","BreadTop","Seeds1","Seeds2","BurgerIngredient","ingredient","type","style","BurgerContainer","Burger","isEditing","transformedIngredients","igKey","Array","_","i","reduce","arr","el","concat","length","fontSize","fontWeight","marginBottom","CustomModal","isOpen","label","contentLabel","ariaHideApp","ControlContainer","button","buttonType","Label","BuildControl","addIngredient","removeIngredient","controls","ControlsContainer","BuildControls","control","CustomButton","isDisabled","disabled","backgroundColor","CustomInput","onChange","TextField","BurgerBuilder","addBurger","updateBurger","ingredientsSet","burgerName","setName","event","target","updatedCount","updatedingredients","oldCount","updatedIngredients","newBurger","burger","put","editBurger","post","StyledTableCell","withStyles","head","palette","common","black","white","body","TableCell","StyledTableRow","root","default","TableRow","table","roundValue","Math","round","BurgerDetailsTable","ingredientsCounts","calculatedIngredients","result","currentKey","ingredientCount","find","parseInt","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","BurgerWrapper","Catalog","isModalOpen","setIsModalOpen","React","burgers","setBurgers","selectedBurger","setSelectedBurger","interval","setInterval","resData","mappedData","filter","some","clearInterval","removeBurger","delete","deleteBurger","filteredBurgers","updatedBurger","slicedBurgers","Grid","container","item","xs","sm","flexDirection","bottom","right","OfflineHeader","MainApp","exact","path","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","Modal","setAppElement","ReactDOM","render","document","getElementById","URL","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.39776211.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nexport type NetworkProps = {\n  isOnline: boolean;\n};\n\nconst networkContext = createContext<NetworkProps>({\n  isOnline: true,\n});\n\nexport function ProvideNetwork({\n  children,\n}: {\n  children: React.ReactChild;\n}): React.ReactElement {\n  const auth = useProvideNetwork();\n  return (\n    <networkContext.Provider value={auth}>{children}</networkContext.Provider>\n  );\n}\n\nexport const useNetwork = (): NetworkProps => useContext(networkContext);\n\nfunction useProvideNetwork(): NetworkProps {\n  const [isOnline, setIsOnline] = useState<boolean>(true);\n\n  useEffect(() => {\n    window.addEventListener('online', () => setIsOnline(true));\n    window.addEventListener('offline', () => setIsOnline(false));\n  }, []);\n\n  return {\n    isOnline,\n  };\n}\n","const routes = {\n  home: '/burger-test-project',\n  catalog: '/burger-test-project/catalog',\n};\n\nexport default routes;\n","import React, { useState, useContext, createContext, useEffect } from 'react';\nimport { History } from 'history';\nimport { useNetwork } from './useNetwork';\nimport routes from '../utils/routes';\n\ninterface ProvideAuthProps {\n  children: React.ReactChild;\n}\n\nexport interface AuthError {\n  error: string;\n  details: string;\n}\n\nexport interface User {\n  name: string;\n  email: string;\n}\n\nexport interface UseAuthProps {\n  user: User;\n  token: string;\n  signIn: (e: History) => Promise<string>;\n  signOut: (e: History) => void;\n}\n\nconst authContext = createContext<UseAuthProps>({\n  user: { name: '', email: '' },\n  token: '',\n  signOut: () => console.log(),\n  signIn: () => Promise.resolve(''),\n});\n\nconst clientId = 'client_id';\n\n// Provider component that wraps your app and makes auth object available\n// to any child component that calls useAuth().\nexport function ProvideAuth({\n  children,\n}: ProvideAuthProps): React.ReactElement {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = (): UseAuthProps => useContext(authContext);\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth(): UseAuthProps {\n  const [, forceRerender] = useState();\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({ name: '', email: '' });\n  const { isOnline } = useNetwork();\n\n  // TODO: wrap execution inside try catch\n  const signIn = async (history: History): Promise<string> => {\n    const auth2 = window.gapi.auth2.getAuthInstance();\n    const googleUser = await auth2.signIn();\n    const profile = googleUser.getBasicProfile();\n    const profileData = {\n      name: profile.getGivenName(),\n      email: profile.getEmail(),\n    };\n    const idToken = googleUser.getAuthResponse().id_token;\n    localStorage.setItem('token', idToken);\n    localStorage.setItem('user', JSON.stringify(profileData));\n    setToken(idToken);\n    setUser(profileData);\n    history.push(routes.catalog);\n    return token;\n  };\n\n  const signOut = (history: History): void => {\n    localStorage.clear();\n    setToken('');\n    setUser({ name: '', email: '' });\n    history.push(routes.home);\n  };\n\n  const localAuthRefresh = (): void => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      setToken('');\n    }\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  };\n\n  // Set token and user on mount\n  useEffect(() => {\n    const _onInit = (): void => {\n      localAuthRefresh();\n    };\n    const _onError = (err: AuthError): void => {\n      console.log('error', err);\n    };\n    const { gapi } = window;\n    if (gapi) {\n      gapi.load('auth2', function() {\n        gapi.auth2\n          .init({ [clientId]: process.env.REACT_APP_GOOGLE_CLIENT_ID })\n          .then(_onInit, _onError);\n      });\n    } else {\n      // eslint-disable-next-line\n      // @ts-ignore\n      window.myFunc = forceRerender;\n    }\n\n    // we include the empty array which means this only runs once on component mount\n    // since we are simply getting an item from AsyncStorage that is sufficient for now\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOnline, window.gapi]);\n\n  // Return the token, user object, and auth methods\n  return {\n    token,\n    user,\n    signIn,\n    signOut,\n  };\n}\n","import axios, { AxiosRequestConfig } from 'axios';\n\nconst nutritionAPI = axios.create({\n  baseURL: 'https://api.nutritionix.com/v1_1/',\n  timeout: 1000,\n  headers: { 'Content-type': 'application/json' },\n});\n\nnutritionAPI.interceptors.request.use(\n  (config: AxiosRequestConfig): AxiosRequestConfig => {\n    config.params = config.params || {};\n    config.params.appId = process.env.REACT_APP_NUTRITION_ID;\n    config.params.appKey = process.env.REACT_APP_NUTRITION_KEY;\n    return config;\n  },\n);\n\nexport default nutritionAPI;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { getIngredientById } from '../utils/burger-api';\nimport { useNetwork } from './useNetwork';\n\nexport interface IngredientsProps {\n  [key: string]: string;\n}\n\nexport interface IngredientDetailsProps {\n  [key: string]: number;\n}\n\nexport interface IngredientProps {\n  key: string;\n  detailedInfo: IngredientDetailsProps;\n}\n\nexport interface UseIngredientsProps {\n  ingredients: Array<IngredientProps>;\n}\n\nconst ingredientsIDs: IngredientsProps = {\n  salad: '5da6c2339094e13219339f14',\n  meat: '561e795169fc03824d08345e',\n  cheese: '5976643fa690431a53463b05',\n  bacon: '561e6c16c265794042cb5f20',\n};\n\nconst ingredientsContext = createContext<UseIngredientsProps>({\n  ingredients: [],\n});\n\nexport function ProvideIngredients({\n  children,\n}: {\n  children: React.ReactChild;\n}): React.ReactElement {\n  const auth = useProvideIngredients();\n  return (\n    <ingredientsContext.Provider value={auth}>\n      {children}\n    </ingredientsContext.Provider>\n  );\n}\n\nexport const useIngredients = (): UseIngredientsProps =>\n  useContext(ingredientsContext);\n\nfunction useProvideIngredients(): UseIngredientsProps {\n  const [ingredients, setIngredients] = useState<Array<IngredientProps>>([]);\n  const { isOnline } = useNetwork();\n\n  const localIngredientsRefresh = () => {\n    const storedIngredients = localStorage.getItem('ingredients');\n    if (storedIngredients) {\n      const parsedData = JSON.parse(storedIngredients);\n      setIngredients(parsedData);\n    } else {\n      Promise.all(\n        Object.keys(ingredientsIDs).map(async (key: string) => {\n          const { data } = await getIngredientById(ingredientsIDs[key]);\n          const {\n            nf_calories: calories,\n            nf_sodium: sodium,\n            nf_vitamin_a_dv: vitaminA,\n            nf_vitamin_c_dv: vitaminC,\n          } = data;\n          const detailedInfo = {\n            calories,\n            sodium,\n            vitaminA,\n            vitaminC,\n          };\n\n          return { key, detailedInfo };\n        }),\n      ).then(res => {\n        localStorage.setItem('ingredients', JSON.stringify(res));\n        setIngredients(res);\n      });\n    }\n  };\n\n  useEffect(() => {\n    localIngredientsRefresh();\n  }, [isOnline]);\n\n  return {\n    ingredients,\n  };\n}\n","import nutritionAPI from './api-resourses/nutrition';\nimport { AxiosResponse } from 'axios';\n\nconst getIngredientById = (id: string): Promise<AxiosResponse> => {\n  return nutritionAPI.get('item', {\n    params: { id },\n  });\n};\n\nexport { getIngredientById };\n","import React from 'react';\nimport { AppBar, Button, makeStyles, Toolbar } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from '../../hooks/useAuth';\nimport { withRouter } from 'react-router';\nimport { History } from 'history';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: 'rgb(255,141,85)',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\ninterface NavBarProps {\n  history: History;\n}\n\nconst NavBar = ({ history }: NavBarProps): React.ReactElement => {\n  const classes = useStyles();\n  const { signIn, signOut, user } = useAuth();\n\n  const AccessBlock =\n    user.name === '' ? (\n      <Button color=\"inherit\" onClick={(): Promise<string> => signIn(history)}>\n        Login\n      </Button>\n    ) : (\n      <Button color=\"inherit\" onClick={(): void => signOut(history)}>\n        Logout\n      </Button>\n    );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Burger-App\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>{AccessBlock}</div>\n          <div className={classes.sectionMobile}>{AccessBlock}</div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withRouter(NavBar);\n","import axios from 'axios';\n\nconst burgerAPI = axios.create({\n  baseURL: 'https://burger-app-eaa1f.firebaseio.com/',\n});\n\nexport default burgerAPI;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ninterface BurgerIngredientProps {\n  type: string;\n}\n\nconst BurgerIngredient = ({\n  type,\n}: BurgerIngredientProps): React.ReactElement | null => {\n  let ingredient = null;\n\n  switch (type) {\n    case 'bread-bottom':\n      ingredient = <BreadBottom />;\n      break;\n    case 'bread-top':\n      ingredient = (\n        <BreadTop>\n          <Seeds1 />\n          <Seeds2 />\n        </BreadTop>\n      );\n      break;\n    case 'meat':\n      ingredient = <div style={Meat} />;\n      break;\n    case 'cheese':\n      ingredient = <div style={Cheese} />;\n      break;\n    case 'salad':\n      ingredient = <div style={Salad} />;\n      break;\n    case 'bacon':\n      ingredient = <div style={Bacon} />;\n      break;\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n};\n\nconst Cheese = {\n  width: '90%',\n  height: '4.5%',\n  margin: '2% auto',\n  background: 'linear-gradient(#f4d004, #d6bb22)',\n  borderRadius: '20px',\n};\n\nconst Meat = {\n  width: '80%',\n  height: '8%',\n  background: 'linear-gradient(#7f3608, #702e05)',\n  margin: '2% auto',\n  borderRadius: '15px',\n};\n\nconst Salad = {\n  width: '85%',\n  height: '7%',\n  margin: '2% auto',\n  background: 'linear-gradient(#228c1d, #91ce50)',\n  borderRadius: '20px',\n};\n\nconst Bacon = {\n  width: '80%',\n  height: '3%',\n  background: 'linear-gradient(#bf3813, #c45e38)',\n  margin: '2% auto',\n};\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nconst BreadBottom = styled.div`\n  height: 13%;\n  width: 80%;\n  background: #f08e4a;\n  border-radius: 0 0 30px 30px;\n  box-shadow: inset -15px 0 #c15711;\n  margin: 2% auto;\n`;\n\nconst BreadTop = styled.div`\n  height: 20%;\n  width: 80%;\n  background: linear-gradient(#bc581e, #e27b36);\n  border-radius: 50% 50% 0 0;\n  box-shadow: inset -15px 0 #c15711;\n  margin: 2% auto;\n  position: relative;\n`;\n\nconst Seeds1 = styled.div`\n  width: 10%;\n  height: 15%;\n  position: absolute;\n  background-color: white;\n  left: 30%;\n  top: 50%;\n  border-radius: 40%;\n  transform: rotate(-20deg);\n  box-shadow: inset -2px -3px #c9c9c9;\n\n  :before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: 180%;\n    top: -50%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px -3px #c9c9c9;\n  }\n\n  :after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: -170%;\n    top: -260%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px 2px #c9c9c9;\n  }\n`;\n\nconst Seeds2 = styled.div`\n  width: 10%;\n  height: 15%;\n  position: absolute;\n  background-color: white;\n  left: 64%;\n  top: 50%;\n  border-radius: 40%;\n  transform: rotate(10deg);\n  box-shadow: inset -3px 0 #c9c9c9;\n\n  &::before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: 150%;\n    top: -130%;\n    border-radius: 40%;\n    transform: rotate(90deg);\n    box-shadow: inset 1px 3px #c9c9c9;\n  }\n\n  &::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: white;\n    left: -170%;\n    top: -260%;\n    border-radius: 40%;\n    transform: rotate(60deg);\n    box-shadow: inset -1px 2px #c9c9c9;\n  }\n`;\n\nexport default BurgerIngredient;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\n\nexport interface BurgerIngredients {\n  [key: string]: number;\n}\n\nexport interface BurgerProps {\n  ingredients: BurgerIngredients;\n  name?: string;\n  isEditing?: boolean;\n}\n\nconst Burger: FunctionComponent<BurgerProps> = ({\n  ingredients,\n  name,\n  isEditing = false,\n}) => {\n  const transformedIngredients = Object.keys(ingredients)\n    .map((igKey: string) => {\n      return [...Array(ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients.push(<p>please start adding ingredients</p>);\n  }\n  return (\n    <BurgerContainer>\n      {!isEditing && (\n        <div\n          style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '10px' }}\n        >\n          {name}\n        </div>\n      )}\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </BurgerContainer>\n  );\n};\n\nconst BurgerContainer = styled.div`\n  width: 100%;\n  margin: auto;\n  height: 100%;\n  text-align: center;\n  font-weight: bold;\n  fontsize: 1.2rem;\n`;\n\nexport default Burger;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport Modal from 'react-modal';\n\ninterface ModalProps {\n  children: ReactNode;\n  isOpen: boolean;\n  label: string;\n}\n\nconst CustomModal: FunctionComponent<ModalProps> = ({\n  children,\n  isOpen,\n  label,\n}) => (\n  <Modal isOpen={isOpen} contentLabel={label} ariaHideApp={true}>\n    {children}\n  </Modal>\n);\n\nexport default CustomModal;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\ninterface BuildControlProps {\n  label: string;\n  addIngredient: Function;\n  removeIngredient: Function\n}\n\nconst BuildControl: FunctionComponent<BuildControlProps> = ({\n  label,\n  addIngredient,\n  removeIngredient,\n}) => {\n  return (\n    <ControlContainer>\n      <Label>{label}</Label>\n      <Button buttonType=\"less\" onClick={() => removeIngredient()}>\n        less\n      </Button>\n      <Button buttonType=\"more\" onClick={() => addIngredient()}>\n        more\n      </Button>\n    </ControlContainer>\n  );\n};\n\nconst ControlContainer = styled.div`\n  background-color: #cf8f2e;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 5px 0;\n`;\n\nconst Button = styled.button`\n  display: block,\n  font: inherit;\n  padding: 5px;\n  margin: 0 5px;\n  width: 80px;\n  border: 1px solid #AA6817;\n  cursor: pointer;\n  outline: none;\n  \n  &::disabled {\n  background-color: #AC9980;\n  border: 1px solid #7E7365;\n  color: #ccc;\n  cursor: default;\n  }\n  \n  &::hover:disabled {\n  background-color: #AC9980;\n  color: #ccc;\n  cursor: not-allowed;\n  }\n  \n  ${({ buttonType }: { buttonType: string }): string =>\n    buttonType === 'less'\n      ? `\n  background-color: #D39952;\n  color: white;\n  :hover, :active {\n  background-color: #DAA972;\n  color: white;\n  }\n  `\n      : `\n  background-color: #8F5E1E;\n  color: white;\n  :hover, :active {\n  background-color: #99703F;\n  color: white;\n  }\n  `}\n  \n`;\n\nconst Label = styled.div`\n  padding: 10px;\n  font-weight: bold;\n  width: 80px;\n`;\nexport default BuildControl;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' },\n];\n\ninterface BuildControlsProps {\n  addIngredient: Function;\n  removeIngredient: Function;\n}\n\nconst BuildControls: FunctionComponent<BuildControlsProps> = ({\n  addIngredient,\n  removeIngredient,\n}) => {\n  return (\n    <ControlsContainer>\n      {controls.map(control => (\n        <BuildControl\n          key={control.label}\n          label={control.label}\n          addIngredient={(): void => addIngredient(control.type)}\n          removeIngredient={(): void => removeIngredient(control.type)}\n        />\n      ))}\n    </ControlsContainer>\n  );\n};\n\nconst ControlsContainer = styled.div`\n  width: 100%;\n  background-color: #cf8f2e;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  box-shadow: 0 2px 1px #ccc;\n  margin: auto;\n  padding: 10px;\n`;\n\nexport default BuildControls;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\ninterface ModalProps {\n  children: ReactNode;\n  isDisabled: false;\n  onClick: () => void;\n}\n\nconst CustomButton: FunctionComponent<ModalProps> = ({\n  children,\n  isDisabled,\n  onClick,\n}) => (\n  <Button\n    disabled={isDisabled}\n    onClick={onClick}\n    style={{ backgroundColor: '#F08E49' }}\n  >\n    {children}\n  </Button>\n);\n\nexport default CustomButton;\n","import React, { FunctionComponent } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface ModalProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label: string;\n}\n\nconst CustomInput: FunctionComponent<ModalProps> = ({\n  value,\n  onChange,\n  label,\n}) => (\n  <TextField\n    style={{ width: '100%' }}\n    value={value}\n    onChange={onChange}\n    id=\"outlined-basic\"\n    label={label}\n    variant=\"outlined\"\n  />\n);\n\nexport default CustomInput;\n","import React, { FunctionComponent, useState } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport CustomInput from '../../components/CustomInput/CustomInput';\nimport { editBurger, saveBurger } from '../../utils/firebase';\nimport { BurgerProps } from '../Catalog/Catalog';\n\ntype BurgerBuilderProps = {\n  addBurger: (burger: BurgerProps) => void;\n  updateBurger: (burger: BurgerProps) => void;\n  ingredientsSet?: IngredientProps;\n  burgerName?: string;\n  id?: string;\n};\n\nexport type IngredientProps = {\n  [key: string]: number;\n};\n\nconst BurgerBuilder: FunctionComponent<BurgerBuilderProps> = ({\n  addBurger,\n  updateBurger,\n  ingredientsSet,\n  burgerName,\n  id,\n}) => {\n  const [isEditing] = useState(burgerName !== '');\n  const [name, setName] = useState(burgerName || '');\n  const [ingredients, setIngredients] = useState<IngredientProps>(\n    ingredientsSet || {\n      salad: 0,\n      meat: 0,\n      cheese: 0,\n      bacon: 0,\n    },\n  );\n\n  const handleNameChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    setName(event.target.value);\n  };\n\n  const addIngredient = (type: string): void => {\n    const oldCount = ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedingredients = {\n      ...ingredients,\n    };\n    updatedingredients[type] = updatedCount;\n    setIngredients(updatedingredients);\n  };\n\n  const saveNewBurger = (): void => {\n    const newBurger = {\n      ingredients: ingredients,\n      name: name,\n    };\n    saveBurger(newBurger).then(({ data }) => {\n      const { name } = data;\n      addBurger({ ...newBurger, id: name });\n    });\n  };\n\n  const changeBurger = (): void => {\n    const newBurger = {\n      ingredients: ingredients,\n      name: name,\n    };\n    editBurger(id, newBurger).then(() => {\n      updateBurger(newBurger);\n    });\n  };\n\n  const removeIngredient = (type: string): void => {\n    const oldCount = ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    setIngredients(updatedIngredients);\n  };\n\n  return (\n    <div style={{ height: '400px' }}>\n      <div style={{ margin: '50px 0' }}>\n        <CustomInput\n          value={name}\n          onChange={handleNameChange}\n          label={'Burger Name'}\n        />\n      </div>\n      <Burger ingredients={ingredients} name={name} isEditing={isEditing}/>\n      <BuildControls\n        addIngredient={addIngredient}\n        removeIngredient={removeIngredient}\n      />\n      {!id ? (\n        <CustomButton isDisabled={false} onClick={saveNewBurger}>\n          save\n        </CustomButton>\n      ) : (\n        <CustomButton isDisabled={false} onClick={changeBurger}>\n          edit\n        </CustomButton>\n      )}\n    </div>\n  );\n};\n\nexport default BurgerBuilder;\n","import { AxiosResponse } from 'axios';\nimport burgerAPI from './api-resourses/firebase-burger';\nimport { BurgerProps } from '../screens/Catalog/Catalog';\n\nconst getBurgers = (): Promise<AxiosResponse> => burgerAPI.get('orders.json');\n\nconst saveBurger = (burger: BurgerProps): Promise<AxiosResponse> =>\n  burgerAPI.post('/orders.json', burger);\n\nconst editBurger = (\n  id: string | undefined,\n  burger: BurgerProps,\n): Promise<AxiosResponse> => burgerAPI.put(`/orders/${id}.json/`, burger);\n\nconst deleteBurger = (id: string | undefined): Promise<AxiosResponse> =>\n  burgerAPI.delete(`orders/${id}.json`);\n\nexport { getBurgers, saveBurger, editBurger, deleteBurger };\n","import React, { FC } from 'react';\nimport { TableContainer } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { useIngredients } from '../../hooks/useIngredients';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {},\n});\n\nconst roundValue = (value: number): number => Math.round(value);\n\nconst BurgerDetailsTable: FC<any> = ({ ingredients: ingredientsCounts }) => {\n  const classes = useStyles();\n  const { ingredients } = useIngredients();\n\n  const calculatedIngredients = Object.keys(ingredientsCounts).reduce(\n    (result, currentKey) => {\n      const ingredientCount = ingredientsCounts[currentKey];\n      const ingredient = ingredients.find(\n        (ingredient: any) => ingredient.key === currentKey,\n      );\n      const {\n        vitaminA = 0,\n        vitaminC = 0,\n        sodium = 0,\n        calories = 0,\n      } = ingredient ? ingredient.detailedInfo : {};\n      return {\n        vitaminA: roundValue(\n          result.vitaminA + vitaminA * parseInt(ingredientCount),\n        ),\n        vitaminC: roundValue(\n          result.vitaminC + vitaminC * parseInt(ingredientCount),\n        ),\n        sodium: roundValue(result.sodium + sodium * parseInt(ingredientCount)),\n        calories: roundValue(\n          result.calories + calories * parseInt(ingredientCount),\n        ),\n      };\n    },\n    // initial value\n    { vitaminA: 0, vitaminC: 0, sodium: 0, calories: 0 },\n  );\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"right\">Vitamin A</StyledTableCell>\n              <StyledTableCell align=\"right\">Vitamin C</StyledTableCell>\n              <StyledTableCell align=\"right\">Sodium</StyledTableCell>\n              <StyledTableCell align=\"right\">Calories</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <StyledTableRow>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.vitaminA}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.vitaminC}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.sodium}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {calculatedIngredients.calories}\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default BurgerDetailsTable;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport { deleteBurger, getBurgers } from '../../utils/firebase';\nimport Burger from '../../components/Burger/Burger';\nimport CustomModal from '../../components/Modal/Modal';\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\nimport CustomButton from '../../components/CustomButton/CustomButton';\nimport BurgerDetailsTable from '../../components/BurgerDetailsTable/BurgerDetailsTable';\nimport { Grid } from '@material-ui/core';\nimport { useNetwork } from '../../hooks';\n\nexport interface BurgerIngredients {\n  [key: string]: number;\n}\n\nexport interface BurgerProps {\n  ingredients: BurgerIngredients;\n  name?: string;\n  id?: string;\n}\n\nconst Catalog = (): React.ReactElement => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const { isOnline } = useNetwork();\n  const [burgers, setBurgers] = React.useState<Array<BurgerProps>>([]);\n  const [\n    selectedBurger,\n    setSelectedBurger,\n  ] = React.useState<BurgerProps | null>(null);\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        getBurgers().then(({ data = {} }) => {\n          const resData = data || {};\n\n          const mappedData = Object.keys(resData)\n            .filter(key => !burgers.some(burger => burger.id === key))\n            .map(key => ({\n              ...data[key],\n              id: key,\n            }));\n          setBurgers(burgers.concat(mappedData));\n        });\n      },\n      burgers.length === 0 ? 1000 : 5000,\n    );\n\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOnline, burgers]);\n\n  const addNewBurger = (burger: BurgerProps): void => {\n    setBurgers([...burgers, burger]);\n    setIsModalOpen(false);\n    setSelectedBurger(null);\n  };\n\n  const removeBurger = (id: string | undefined): void => {\n    deleteBurger(id).then(() => {\n      const filteredBurgers = burgers.filter(burger => burger.id !== id);\n      setBurgers(filteredBurgers);\n    });\n  };\n\n  const updateBurger = (updatedBurger: BurgerProps): void => {\n    const slicedBurgers = burgers.filter(\n      burger => burger.id !== selectedBurger?.id,\n    );\n    setBurgers([\n      ...slicedBurgers,\n      { ...updatedBurger, id: selectedBurger?.id },\n    ]);\n    setSelectedBurger(null);\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <CustomModal isOpen={isModalOpen} label=\"Burger Builder\">\n        <div>\n          <div\n            onClick={(): void => {\n              setIsModalOpen(false);\n              setSelectedBurger(null);\n            }}\n          >\n            close\n          </div>\n          <BurgerBuilder\n            addBurger={addNewBurger}\n            updateBurger={updateBurger}\n            ingredientsSet={selectedBurger?.ingredients}\n            burgerName={selectedBurger?.name}\n            id={selectedBurger?.id}\n          />\n        </div>\n      </CustomModal>\n\n      {burgers.map((burger: BurgerProps) => {\n        const { ingredients, name, id } = burger;\n        return (\n          <Grid container>\n            <Grid item xs={12} sm={6}>\n              <BurgerWrapper>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    height: '100%',\n                  }}\n                >\n                  <Burger ingredients={ingredients} name={name} />\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\n                    <CustomButton\n                      isDisabled={false}\n                      onClick={() => {\n                        setSelectedBurger(burger);\n                        setIsModalOpen(true);\n                      }}\n                    >\n                      Edit\n                    </CustomButton>\n                    <CustomButton\n                      isDisabled={false}\n                      onClick={() => {\n                        removeBurger(id);\n                      }}\n                    >\n                      remove\n                    </CustomButton>\n                  </div>\n                </div>\n              </BurgerWrapper>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <div>\n                <BurgerDetailsTable ingredients={ingredients} />\n              </div>\n            </Grid>\n          </Grid>\n        );\n      })}\n\n      <div style={{ position: 'fixed', bottom: '5%', right: '10%' }}>\n        <CustomButton\n          onClick={(): void => setIsModalOpen(true)}\n          isDisabled={false}\n        >\n          open builder\n        </CustomButton>\n      </div>\n    </>\n  );\n};\n\nconst BurgerWrapper = styled.div`\n  -webkit-box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  box-shadow: 2px 2px 15px -6px rgba(0, 0, 0, 0.75);\n  margin: 10px;\n\n  height: 300px;\n  text-align: center;\n  font-weight: bold;\n  fontsize: 1.2rem;\n  max-width: 450px;\n`;\n\nexport default Catalog;\n","import React, { FC } from 'react';\nimport { useAuth } from '../../hooks';\nimport { withRouter } from 'react-router';\nimport { History } from 'history';\nimport routes from '../../utils/routes';\n\ninterface NavBarProps {\n  history: History;\n}\n\nconst OnBoarding: FC<NavBarProps> = ({ history }) => {\n  const { token } = useAuth();\n  console.log(token);\n\n  if (token !== '') {\n    history.push(routes.catalog);\n  }\n\n  return <div>asdfasdfasdf</div>;\n};\n\nexport default withRouter(OnBoarding);\n","import React, { FC } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport Catalog from './screens/Catalog/Catalog';\nimport { useNetwork } from './hooks';\nimport styled from 'styled-components';\nimport OnBoarding from './screens/OnBoarding/OnBoarding';\nimport routes from './utils/routes';\n\nconst MainApp: FC = () => {\n  const { isOnline } = useNetwork();\n\n  return (\n    <>\n      <BrowserRouter>\n        <div>\n          <NavBar />\n        </div>\n        <Switch>\n          <Route exact path={routes.home}>\n            <OnBoarding />\n          </Route>\n          <Route path={routes.catalog}>\n            <Catalog />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      {!isOnline && <OfflineHeader>you are offline</OfflineHeader>}\n    </>\n  );\n};\n\nconst OfflineHeader = styled.div`\n  width: 100%;\n  background-color: yellow;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  bottom: 0%;\n  z-index: 1;\n`;\n\nexport default MainApp;\n","import React from 'react';\nimport './App.css';\nimport { ProvideAuth } from './hooks/useAuth';\nimport { ProvideIngredients } from './hooks/useIngredients';\nimport { ProvideNetwork } from './hooks/useNetwork';\nimport MainApp from './MainApp';\nconst App = (): React.ReactElement => {\n  return (\n    <div>\n      <ProvideNetwork>\n        <ProvideAuth>\n          <ProvideIngredients>\n            <MainApp />\n          </ProvideIngredients>\n        </ProvideAuth>\n      </ProvideNetwork>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Modal from 'react-modal';\nimport * as serviceWorker from './serviceWorker';\nModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}